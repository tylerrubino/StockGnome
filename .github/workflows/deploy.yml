name: Deploy on AWS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Clean old Docker images (ensure no cache issues)
        run: |
          docker builder prune --all --force || true
          docker image prune -a --force || true

      - name: Build and push Docker image
        run: |
          docker build --no-cache -t ${{ secrets.DOCKER_USERNAME }}/stockgnome:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/stockgnome:latest

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.AWS_EC2_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to AWS EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.AWS_EC2_IP }} "
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }};
            docker pull ${{ secrets.DOCKER_USERNAME }}/stockgnome:latest;
            docker stop stockgnome || true;
            docker rm stockgnome || true;
            docker run -d \
              --name stockgnome \
              -e SECRET_KEY=\"${{ secrets.DJANGO_SECRET_KEY }}\" \
              -e DEBUG='False' \
              -e DB_NAME='${{ secrets.DB_NAME }}' \
              -e DB_USER='${{ secrets.DB_USER }}' \
              -e DB_PASSWORD='${{ secrets.DB_PASSWORD }}' \
              -e DB_HOST='${{ secrets.DB_HOST }}' \
              -e DB_PORT='5432' \
              -p 80:8000 \
              ${{ secrets.DOCKER_USERNAME }}/stockgnome:latest
          "
